version: '2'
volumes:
  service_upnp:
  service_hostname:
  harness___cinny:
  daemon_synapse:
  proxy_nm: 
  service_yggdrasil:
  service_yggdrasil_sock:
  shared_etc: 
  postgres_9:
  pleroma_5:
services:
  daemon_caddy:
    build: ./daemon/caddy
    restart: always
    network_mode: host
    ports:
      - "80:80"
      - "443:443"
      - "8443:8443"
      - "4000:4000"
      - "4001:4001"
    volumes:
      - harness___cinny:/harness/cinny
  daemon_next:
    build: ./daemon/next
    restart: always
    network_mode: host
    expose:
      - "80"
    volumes:
      - service_upnp:/usr/src/app/service/upnp
      - service_hostname:/usr/src/app/service/hostname
      - harness___cinny:/usr/src/app/harness/cinny
  daemon_pleroma:
    restart: always
    network_mode: host
    build:
      context: ./daemon/pleroma
    volumes:
      - pleroma_5:/var/lib/pleroma/
      - shared_etc:/shared_etc
      - service_yggdrasil:/yggdrasil
    environment:
      DOMAIN: exmaple.com
      INSTANCE_NAME: Pleroma
      ADMIN_EMAIL: admin@example.com
      NOTIFY_EMAIL: notify@example.com
      DB_USER: pleroma
      DB_PASS: ChangeMe!
      DB_NAME: pleroma
      DB_HOST: localhost
    depends_on:
      - postgres
  postgres:
    image: postgres:12.1-alpine
    restart: always
    network_mode: host
    environment:
      POSTGRES_USER: pleroma
      POSTGRES_PASSWORD: ChangeMe!
      POSTGRES_DB: pleroma
    volumes:
      - postgres_9:/var/lib/postgresql/data
  service_upnp:
    build: ./service/upnp
    network_mode: host
    volumes:
      - service_upnp:/upnp
  service_wifi-connect:
    build: ./service/wifi-connect
    network_mode: "host"
    labels:
      io.balena.features.dbus: '1'
    cap_add:
      - NET_ADMIN
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/host/run/dbus/system_bus_socket"

  service_hostname:
    build: ./service/hostname
    restart: "no" # Required to avoid container restarting indefinitely
    network_mode: host
    labels:
      io.balena.features.supervisor-api: 1 # Required to interact with the supervisor
    environment:
      SET_HOSTNAME: setup
    volumes:
      - service_hostname:/service/hostname
  
  daemon_proxy:
    build: ./lib
    labels:
      io.balena.features.dbus: '1'
    privileged: true
    network_mode: host
    restart: always
    volumes:
      - service_upnp:/proxy/upnp
    expose:
      - "8000"
  # These will eventually live in an inherited project, but until they have a home they are saved here
  service_yggdrasil:
    # https://stackoverflow.com/a/37090165
    build:
      context: ./service/yggdrasil/
      dockerfile: ./contrib/docker/Dockerfile
    privileged: true
    restart: "always"
    network_mode: host
    expose:
      - "9001"
    volumes:
      - service_yggdrasil:/etc/yggdrasil-network
      - service_yggdrasil_sock:/var/run/
  service_yggdrasil-peers:
    build: ./service/yggdrasil-peers
    privileged: true
    network_mode: host
    cpu_shares: 256
    volumes:
      - service_yggdrasil_sock:/var/run/
      - shared_etc:/peers/
    restart: "always"
  harness__cinny:
    build: ./harness/cinny
    volumes:
      - harness___cinny:/src/dist
  daemon_synapse:
    build: ./daemon/synapse
    restart: "always"
    network_mode: host
    expose:
      - "8008"
    ports: 
      - "8008:8008"
    volumes:
      - daemon_synapse:/data
      - shared_etc:/etc
      - service_yggdrasil:/yggdrasil
